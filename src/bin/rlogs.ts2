#!/usr/bin/env node
import * as yargs from 'yargs';
import { Options } from 'yargs';
import { RLogs } from '../lib/index';


const rlogs = new RLogs('lnav');


yargs
// configure help output
    .help('h', 'Shows this help')
    .alias('h', 'help')
    .showHelpOnFail(true)
    .usage('$0 [options]')
    .version(rlogs.pkg.version)
    .alias('v', 'version')
    .epilog(`Copyright ${(new Date).getFullYear()} - ${rlogs.pkg.author} - ${rlogs.pkg.license} License`)


    // configure yargs
    .wrap(rlogs.io.calcWrap(yargs.terminalWidth()))
    .recommendCommands()

    // options and commands

    .options({
        p: <Options> { alias: 'prefix', desc: 'prefix to the root of the filesystem where the logs reside', requiresArg: true, nargs: 1, default: '/' },
        a: <Options> { alias: 'add', desc: 'add log path', requiresArg: true, nargs: 1, array: true },
        s: <Options> { alias: 'save', desc: 'save current execution options', requiresArg: true, nargs: 1 },
        l: <Options> { alias: 'load', desc: 'load execution options', requiresArg: true, nargs: 1, type: 'string' },
        L: <Options> { alias: 'list', desc: 'list all saved execution options', boolean: true },
        D: <Options> { alias: 'debug', desc: 'Enable debug output', boolean: true }
    })

    .example('asdf', 'asdf')
;


let argv = yargs.argv;


if(false) {

    if ( argv.debug ) {
        rlogs.debug()
        console.dir({ argv, rlogs })
    }

    if ( rlogs.lnav.isInstalled() === false ) {
        rlogs.io.error(`${rlogs.lnav.cmd} is not installed`);
    }

    if ( argv.help ) {
        yargs.showHelp()
        process.exit()
    }

    if ( argv.prefix ) {
        rlogs.setPrefix(argv.prefix)
    }

    if ( argv.list ) {
        let names = rlogs.getSettingsNames();
        if ( names.length === 0 ) {
            rlogs.io.line('Could not find any saved settings')

        }
        names.forEach(name => rlogs.io.line(` - ${name}`))
        process.exit();
    }

    if ( argv.add && argv.add.length > 0 ) {
        rlogs.setLogPaths(argv.add)
    }

    if ( argv.save ) {
        rlogs.saveSettings(argv.save);
    }

    if ( argv.load ) {
        rlogs.loadSettings(argv.load);
    }


    if ( argv.debug ) {
        console.dir({ rlogs, paths: rlogs.paths })
    }


    rlogs.io.confirm('Start application?').then(() => {
        rlogs.io.line('Starting...')
        rlogs.startApplication();
    })

}